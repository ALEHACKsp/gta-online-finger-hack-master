{"version":3,"sources":["components/stage/style.module.scss","components/option/style.module.scss","components/finger/style.module.scss","components/finger/Finger.js","components/option/Option.js","components/stage/Stage.js","containers/Stage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Finger","image","className","styles","container","src","alt","Option","selected","onClick","option","showResult","cx","success","correct","failed","img","Stage","time","fingerImage","options","selectedOptions","started","showResults","onOptionClick","onResetClick","onCheckClick","parsedTime","moment","format","forceLength","trim","map","key","includes","buttons","button","data-disabled","length","rightColumn","props","selectOptions","bind","check","reset","start","state","finger","min","max","Math","ceil","floor","random","this","setState","clearInterval","timer","prevFinger","config","fingers","getRandomIntInclusive","sort","setInterval","newSelectedOptions","filter","opt","React","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.63c058a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__3k8jo\",\"options\":\"style_options__1ioy9\",\"button\":\"style_button__KJBFZ\",\"time\":\"style_time__1rEGV\",\"rightColumn\":\"style_rightColumn__h2sn-\",\"buttons\":\"style_buttons__1f6G7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"style_option__iqbFu\",\"selected\":\"style_selected__c53dg\",\"success\":\"style_success__2h3Jz\",\"failed\":\"style_failed__qDqJU\",\"img\":\"style_img__1dpT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__3dB9Y\"};","import React from 'react';\r\nimport styles from './style.module.scss'\r\n\r\nconst Finger = ({ image }) => {\r\n\r\n    return(<div className={styles.container}>\r\n        <img src={image} alt=\"\"/>\r\n    </div>)\r\n};\r\n\r\nexport default Finger;","import React from 'react';\r\nimport styles from './style.module.scss'\r\nimport cx from 'classnames'\r\n\r\nconst Option = ({ selected = false, onClick, option, showResult = false }) => {\r\n\r\n    const className = cx(styles.option, {\r\n        [styles.selected]: selected,\r\n        [styles.success]: showResult && option.correct,\r\n        [styles.failed]: showResult && selected && !option.correct,\r\n    });\r\n\r\n    return(<div\r\n        className={className}\r\n        onClick={() => onClick(option)}\r\n    >\r\n        <img src={option.img} alt=\"\" className={styles.img}/>\r\n    </div>)\r\n};\r\n\r\nexport default Option;","import React from 'react';\r\nimport styles from './style.module.scss'\r\n\r\nimport * as moment from 'moment';\r\nimport 'moment-duration-format';\r\n\r\nimport Finger from \"../finger/Finger\";\r\nimport Option from \"../option/Option\";\r\nconst Stage = ({time, fingerImage, options, selectedOptions, started, showResults, onOptionClick, onResetClick, onCheckClick }) => {\r\n\r\n    const parsedTime = moment.duration(time, \"seconds\").format(\"mm:ss\", {\r\n        forceLength: true,\r\n        trim: false,\r\n    });\r\n\r\n\r\n    return(<div className={styles.container}>\r\n\r\n        <div>\r\n            <div className={styles.options}>\r\n                {!!options && options.map((option, key) =>  <Option\r\n                    key={key}\r\n                    option={option}\r\n                    selected={selectedOptions.includes(option)}\r\n                    onClick={onOptionClick}\r\n                    showResult={showResults}\r\n                />)}\r\n            </div>\r\n\r\n            <div className={styles.buttons}>\r\n                <div className={styles.button} onClick={onCheckClick} data-disabled={selectedOptions.length !== 4}>CHECK</div>\r\n                <div className={styles.button} onClick={onResetClick}>{started ? \"RESET\" : \"START\"}</div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n        <div className={styles.rightColumn}>\r\n            <div className={styles.time}>{parsedTime}</div>\r\n            <Finger image={fingerImage}/>\r\n        </div>\r\n\r\n\r\n\r\n    </div>)\r\n};\r\n\r\nexport default Stage;","import React from 'react'\r\nimport StageComponent from \"../components/stage/Stage\";\r\nimport config from './../config'\r\nclass Stage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.selectOptions = this.selectOptions.bind(this);\r\n        this.check = this.check.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n        this.start = this.start.bind(this);\r\n\r\n        this.state = {\r\n            finger: null,\r\n            options: [],\r\n            selectedOptions: [],\r\n            showResults: true,\r\n            time: 0,\r\n            started: false,\r\n        }\r\n    }\r\n\r\n    getRandomIntInclusive(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reset();\r\n    }\r\n\r\n    check() {\r\n        this.setState({\r\n            showResults: true,\r\n        })\r\n\r\n        clearInterval(this.timer)\r\n    }\r\n\r\n    start() {\r\n        this.setState({\r\n            started: true\r\n        }, this.reset)\r\n    }\r\n\r\n    reset() {\r\n        const { started, finger : prevFinger } = this.state;\r\n\r\n        let finger = null;\r\n\r\n        while (!finger || finger.image === prevFinger.image) {\r\n            finger = config.fingers[this.getRandomIntInclusive(0, config.fingers.length - 1)];\r\n            if (!prevFinger) break;\r\n        }\r\n\r\n        finger.options.sort(function() {\r\n            return .5 - Math.random();\r\n        });\r\n\r\n        this.setState({\r\n            finger,\r\n            showResults: false,\r\n            selectedOptions: [],\r\n            time: 0,\r\n        });\r\n\r\n\r\n        clearInterval(this.timer)\r\n        if (started) {\r\n            this.timer = setInterval(() => {\r\n                this.setState({\r\n                    time: this.state.time + 1,\r\n                })\r\n            }, 1000)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    selectOptions(option) {\r\n\r\n        const { selectedOptions} = this.state;\r\n        let newSelectedOptions = [];\r\n\r\n        if (this.state.selectedOptions.includes(option)) {\r\n            newSelectedOptions = selectedOptions.filter(opt => opt.img !== option.img)\r\n\r\n        } else {\r\n\r\n            if (selectedOptions.length > 3) return;\r\n\r\n            newSelectedOptions = [\r\n                ...selectedOptions,\r\n                option\r\n            ]\r\n        }\r\n\r\n        this.setState({\r\n            selectedOptions: newSelectedOptions,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {finger, selectedOptions, showResults, started, time} = this.state;\r\n\r\n        return (\r\n            <StageComponent\r\n                fingerImage={finger ? finger.image : null}\r\n                options={finger ? finger.options : null}\r\n                selectedOptions={selectedOptions}\r\n                onOptionClick={this.selectOptions}\r\n                onResetClick={started ? this.reset : this.start}\r\n                onCheckClick={this.check}\r\n                started={started}\r\n                showResults={showResults}\r\n                time={time}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stage;","import React from 'react';\nimport Stage from \"./containers/Stage\";\nimport './App.css';\n\nfunction App() {\n  return (\n      <Stage />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}